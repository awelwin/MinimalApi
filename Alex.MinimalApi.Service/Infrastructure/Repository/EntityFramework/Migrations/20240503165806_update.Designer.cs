// <auto-generated />
using System;
using Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alex.MinimalApi.Service.Repository.EntiryFramework.Migrations
{
    [DbContext(typeof(MinimalApiDbContext))]
    [Migration("20240503165806_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Employee", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Notification", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("TaxFile");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFileRecord", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<double>("AmountClaimed")
                        .HasColumnType("float");

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<int?>("TaxFileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxFileId");

                    b.ToTable("TaxFileRecord");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", b =>
                {
                    b.HasOne("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Employee", null)
                        .WithOne("TaxFile")
                        .HasForeignKey("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", "EmployeeId");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFileRecord", b =>
                {
                    b.HasOne("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", null)
                        .WithMany("TaxFileRecords")
                        .HasForeignKey("TaxFileId");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Employee", b =>
                {
                    b.Navigation("TaxFile");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", b =>
                {
                    b.Navigation("TaxFileRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
