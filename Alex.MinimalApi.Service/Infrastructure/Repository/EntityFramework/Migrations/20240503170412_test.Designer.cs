// <auto-generated />
using System;
using Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alex.MinimalApi.Service.Repository.EntiryFramework.Migrations
{
    [DbContext(typeof(MinimalApiDbContext))]
    [Migration("20240503170412_test")]
#pragma warning disable CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
    partial class test
#pragma warning restore CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.Employee", b =>
                {
                    b.OwnsOne("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFile", "TaxFile", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Alias")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("Updated")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId")
                                .IsUnique();

                            b1.ToTable("TaxFile", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsMany("Alex.MinimalApi.Service.Infrastructure.Repository.EntityFramework.TaxFileRecord", "TaxFileRecords", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<double>("AmountClaimed")
                                        .HasColumnType("float");

                                    b2.Property<double>("AmountPaid")
                                        .HasColumnType("float");

                                    b2.Property<DateTime?>("Created")
                                        .HasColumnType("datetime2");

                                    b2.Property<int>("FinancialYear")
                                        .HasColumnType("int");

                                    b2.Property<int>("TaxFileId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime?>("Updated")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("Id");

                                    b2.HasIndex("TaxFileId");

                                    b2.ToTable("TaxFileRecord", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("TaxFileId");
                                });

                            b1.Navigation("TaxFileRecords");
                        });

                    b.Navigation("TaxFile");
                });
#pragma warning restore 612, 618
        }
    }
}
